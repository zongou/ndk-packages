diff --git a/configure.py b/configure.py
index 40e0395..eb5a14e 100755
--- a/configure.py
+++ b/configure.py
@@ -1296,7 +1296,6 @@ def configure_node(o):
 
   # Enable branch protection for arm64
   if target_arch == 'arm64':
-    o['cflags']+=['-msign-return-address=all']
     o['variables']['arm_fpu'] = options.arm_fpu or 'neon'
 
   if options.node_snapshot_main is not None:
diff --git a/deps/npm/lib/commands/install.js b/deps/npm/lib/commands/install.js
index 246d7fd..3ba321d 100644
--- a/deps/npm/lib/commands/install.js
+++ b/deps/npm/lib/commands/install.js
@@ -119,6 +119,18 @@ class Install extends ArboristWorkspaceCmd {
           throw e
         }
       }
+      try {
+        if (forced) {
+          log.warn(
+            'install',
+            `Force installing npm version unpatched version of ${npmManifest.version}. This is very likely to break installation of global packages using npm. See https://github.com/termux/termux-packages/issues/13293`
+          )
+        } else {
+          throw new Error("Can't install npm globally as it will very likely break installation of global packages using npm. See https://github.com/termux/termux-packages/issues/13293")
+        }
+      } catch(e) {
+        throw e
+      }
     }
 
     // don't try to install the prefix into itself
diff --git a/deps/npm/node_modules/cacache/lib/util/move-file.js b/deps/npm/node_modules/cacache/lib/util/move-file.js
index eb3ba76..fcac7c9 100644
--- a/deps/npm/node_modules/cacache/lib/util/move-file.js
+++ b/deps/npm/node_modules/cacache/lib/util/move-file.js
@@ -1,56 +1,9 @@
 'use strict'
 
-const fs = require('fs/promises')
 const { moveFile: move } = require('@npmcli/fs')
-const pinflight = require('promise-inflight')
 
 module.exports = moveFile
 
 async function moveFile (src, dest) {
-  const isWindows = process.platform === 'win32'
-
-  // This isn't quite an fs.rename -- the assumption is that
-  // if `dest` already exists, and we get certain errors while
-  // trying to move it, we should just not bother.
-  //
-  // In the case of cache corruption, users will receive an
-  // EINTEGRITY error elsewhere, and can remove the offending
-  // content their own way.
-  //
-  // Note that, as the name suggests, this strictly only supports file moves.
-  try {
-    await fs.link(src, dest)
-  } catch (err) {
-    if (isWindows && err.code === 'EPERM') {
-      // XXX This is a really weird way to handle this situation, as it
-      // results in the src file being deleted even though the dest
-      // might not exist.  Since we pretty much always write files to
-      // deterministic locations based on content hash, this is likely
-      // ok (or at worst, just ends in a future cache miss).  But it would
-      // be worth investigating at some time in the future if this is
-      // really what we want to do here.
-    } else if (err.code === 'EEXIST' || err.code === 'EBUSY') {
-      // file already exists, so whatever
-    } else {
-      throw err
-    }
-  }
-  try {
-    await Promise.all([
-      fs.unlink(src),
-      !isWindows && fs.chmod(dest, '0444'),
-    ])
-  } catch (e) {
-    return pinflight('cacache-move-file:' + dest, async () => {
-      await fs.stat(dest).catch((err) => {
-        if (err.code !== 'ENOENT') {
-          // Something else is wrong here. Bail bail bail
-          throw err
-        }
-      })
-      // file doesn't already exist! let's try a rename -> copy fallback
-      // only delete if it successfully copies
       return move(src, dest)
-    })
-  }
 }
diff --git a/deps/uv/src/unix/fs.c b/deps/uv/src/unix/fs.c
index 933c9c0..8009c0f 100644
--- a/deps/uv/src/unix/fs.c
+++ b/deps/uv/src/unix/fs.c
@@ -1353,6 +1353,7 @@ static ssize_t uv__fs_copyfile(uv_fs_t* req) {
 #endif  /* !__linux__ */
   }
 
+#ifndef __ANDROID__
 #ifdef FICLONE
   if (req->flags & UV_FS_COPYFILE_FICLONE ||
       req->flags & UV_FS_COPYFILE_FICLONE_FORCE) {
@@ -1372,6 +1373,7 @@ static ssize_t uv__fs_copyfile(uv_fs_t* req) {
     err = UV_ENOSYS;
     goto out;
   }
+#endif
 #endif
 
   bytes_to_send = src_statsbuf.st_size;
diff --git a/deps/uv/src/unix/process.c b/deps/uv/src/unix/process.c
index f841536..fe4f0f1 100644
--- a/deps/uv/src/unix/process.c
+++ b/deps/uv/src/unix/process.c
@@ -351,23 +351,6 @@ static void uv__process_child_init(const uv_process_options_t* options,
   if (options->cwd != NULL && chdir(options->cwd))
     uv__write_errno(error_fd);
 
-  if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {
-    /* When dropping privileges from root, the `setgroups` call will
-     * remove any extraneous groups. If we don't call this, then
-     * even though our uid has dropped, we may still have groups
-     * that enable us to do super-user things. This will fail if we
-     * aren't root, so don't bother checking the return value, this
-     * is just done as an optimistic privilege dropping function.
-     */
-    SAVE_ERRNO(setgroups(0, NULL));
-  }
-
-  if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid))
-    uv__write_errno(error_fd);
-
-  if ((options->flags & UV_PROCESS_SETUID) && setuid(options->uid))
-    uv__write_errno(error_fd);
-
   if (options->env != NULL)
     environ = options->env;
 
diff --git a/deps/uv/src/unix/sysinfo-memory.c b/deps/uv/src/unix/sysinfo-memory.c
index 23b4fc6..bd9df73 100644
--- a/deps/uv/src/unix/sysinfo-memory.c
+++ b/deps/uv/src/unix/sysinfo-memory.c
@@ -25,6 +25,7 @@
 #include <stdint.h>
 #include <sys/sysinfo.h>
 
+#ifndef __ANDROID__
 uint64_t uv_get_free_memory(void) {
   struct sysinfo info;
 
@@ -32,6 +33,7 @@ uint64_t uv_get_free_memory(void) {
     return (uint64_t) info.freeram * info.mem_unit;
   return 0;
 }
+#endif
 
 uint64_t uv_get_total_memory(void) {
   struct sysinfo info;
diff --git a/deps/uv/uv.gyp b/deps/uv/uv.gyp
index c1adbc1..4a9fc46 100644
--- a/deps/uv/uv.gyp
+++ b/deps/uv/uv.gyp
@@ -40,7 +40,7 @@
     {
       'target_name': 'libuv',
       'type': '<(uv_library)',
-      'include_dirs': [
+      'include_dirs+': [
         'include',
         'src/',
       ],
@@ -55,7 +55,7 @@
           '<@(shared_unix_defines)',
           '<@(shared_zos_defines)',
         ],
-        'include_dirs': [ 'include' ],
+        'include_dirs+': [ 'include' ],
         'conditions': [
           ['OS == "linux"', {
             'defines': [ '_POSIX_C_SOURCE=200112' ],
@@ -269,6 +269,7 @@
             'src/unix/random-sysctl-linux.c',
             'src/unix/epoll.c',
           ],
+          'defines': [ '__USE_GNU' ],
           'link_settings': {
             'libraries': [ '-ldl' ],
           },
diff --git a/deps/v8/src/trap-handler/trap-handler.h b/deps/v8/src/trap-handler/trap-handler.h
index 1aa7a30..be8fbc0 100644
--- a/deps/v8/src/trap-handler/trap-handler.h
+++ b/deps/v8/src/trap-handler/trap-handler.h
@@ -17,23 +17,7 @@ namespace v8 {
 namespace internal {
 namespace trap_handler {
 
-// X64 on Linux, Windows, MacOS, FreeBSD.
-#if V8_HOST_ARCH_X64 && V8_TARGET_ARCH_X64 &&                        \
-    ((V8_OS_LINUX && !V8_OS_ANDROID) || V8_OS_WIN || V8_OS_DARWIN || \
-     V8_OS_FREEBSD)
-#define V8_TRAP_HANDLER_SUPPORTED true
-// Arm64 (non-simulator) on Mac.
-#elif V8_TARGET_ARCH_ARM64 && V8_HOST_ARCH_ARM64 && V8_OS_DARWIN
-#define V8_TRAP_HANDLER_SUPPORTED true
-// Arm64 simulator on x64 on Linux, Mac, or Windows.
-#elif V8_TARGET_ARCH_ARM64 && V8_HOST_ARCH_X64 && \
-    (V8_OS_LINUX || V8_OS_DARWIN)
-#define V8_TRAP_HANDLER_VIA_SIMULATOR
-#define V8_TRAP_HANDLER_SUPPORTED true
-// Everything else is unsupported.
-#else
 #define V8_TRAP_HANDLER_SUPPORTED false
-#endif
 
 // Setup for shared library export.
 #if defined(BUILDING_V8_SHARED) && defined(V8_OS_WIN)
diff --git a/lib/internal/test_runner/test.js b/lib/internal/test_runner/test.js
index f6a7100..51f8704 100644
--- a/lib/internal/test_runner/test.js
+++ b/lib/internal/test_runner/test.js
@@ -51,7 +51,7 @@ const {
 } = require('internal/validators');
 const { setTimeout } = require('timers/promises');
 const { TIMEOUT_MAX } = require('internal/timers');
-const { cpus } = require('os');
+const { availableParallelism } = require('os');
 const { bigint: hrtime } = process.hrtime;
 const kCallbackAndPromisePresent = 'callbackAndPromisePresent';
 const kCancelledByParent = 'cancelledByParent';
@@ -207,8 +207,7 @@ class Test extends AsyncResource {
 
       case 'boolean':
         if (concurrency) {
-          // TODO(cjihrig): Use uv_available_parallelism() once it lands.
-          this.concurrency = parent === null ? MathMax(cpus().length - 1, 1) : Infinity;
+          this.concurrency = parent === null ? MathMax(availableParallelism() - 1, 1) : Infinity;
         } else {
           this.concurrency = 1;
         }
diff --git a/node.gyp b/node.gyp
index cf52281..708cf00 100644
--- a/node.gyp
+++ b/node.gyp
@@ -1131,311 +1132,6 @@
         } ],
       ]
     }, # specialize_node_d
-    { # fuzz_url
-      'target_name': 'fuzz_url',
-      'type': 'executable',
-      'dependencies': [
-        '<(node_lib_target_name)',
-      ],
-      'includes': [
-        'node.gypi'
-      ],
-      'include_dirs': [
-        'src',
-      ],
-      'defines': [
-        'NODE_ARCH="<(target_arch)"',
-        'NODE_PLATFORM="<(OS)"',
-        'NODE_WANT_INTERNALS=1',
-      ],
-      'sources': [
-        'src/node_snapshot_stub.cc',
-        'test/fuzzers/fuzz_url.cc',
-      ],
-      'conditions': [
-        ['OS=="linux"', {
-          'ldflags': [ '-fsanitize=fuzzer' ]
-        }],
-        # Ensure that ossfuzz flag has been set and that we are on Linux
-        [ 'OS!="linux" or ossfuzz!="true"', {
-          'type': 'none',
-        }],
-      ],
-    }, # fuzz_url
-    { # fuzz_env
-      'target_name': 'fuzz_env',
-      'type': 'executable',
-      'dependencies': [
-        '<(node_lib_target_name)',
-        'deps/histogram/histogram.gyp:histogram',
-        'deps/uvwasi/uvwasi.gyp:uvwasi',
-        'node_dtrace_header',
-        'node_dtrace_ustack',
-        'node_dtrace_provider',
-      ],
-      'includes': [
-        'node.gypi'
-      ],
-      'include_dirs': [
-        'src',
-        'tools/msvs/genfiles',
-        'deps/v8/include',
-        'deps/cares/include',
-        'deps/uv/include',
-        'deps/uvwasi/include',
-        'test/cctest',
-      ],
-      'defines': [
-        'NODE_ARCH="<(target_arch)"',
-        'NODE_PLATFORM="<(OS)"',
-        'NODE_WANT_INTERNALS=1',
-      ],
-      'sources': [
-        'src/node_snapshot_stub.cc',
-        'test/fuzzers/fuzz_env.cc',
-      ],
-      'conditions': [
-        ['OS=="linux"', {
-          'ldflags': [ '-fsanitize=fuzzer' ]
-        }],
-        # Ensure that ossfuzz flag has been set and that we are on Linux
-        [ 'OS!="linux" or ossfuzz!="true"', {
-          'type': 'none',
-        }],
-      ],
-    }, # fuzz_env
-    {
-      'target_name': 'cctest',
-      'type': 'executable',
-
-      'dependencies': [
-        '<(node_lib_target_name)',
-        'deps/base64/base64.gyp:base64',
-        'deps/googletest/googletest.gyp:gtest',
-        'deps/googletest/googletest.gyp:gtest_main',
-        'deps/histogram/histogram.gyp:histogram',
-        'deps/uvwasi/uvwasi.gyp:uvwasi',
-        'node_dtrace_header',
-        'node_dtrace_ustack',
-        'node_dtrace_provider',
-        'deps/simdutf/simdutf.gyp:simdutf',
-        'deps/ada/ada.gyp:ada',
-      ],
-
-      'includes': [
-        'node.gypi'
-      ],
-
-      'include_dirs': [
-        'src',
-        'tools/msvs/genfiles',
-        'deps/v8/include',
-        'deps/cares/include',
-        'deps/uv/include',
-        'deps/uvwasi/include',
-        'test/cctest',
-      ],
-
-      'defines': [
-        'NODE_ARCH="<(target_arch)"',
-        'NODE_PLATFORM="<(OS)"',
-        'NODE_WANT_INTERNALS=1',
-      ],
-
-      'sources': [
-        'src/node_snapshot_stub.cc',
-        'test/cctest/node_test_fixture.cc',
-        'test/cctest/node_test_fixture.h',
-        'test/cctest/test_aliased_buffer.cc',
-        'test/cctest/test_base64.cc',
-        'test/cctest/test_base_object_ptr.cc',
-        'test/cctest/test_node_postmortem_metadata.cc',
-        'test/cctest/test_environment.cc',
-        'test/cctest/test_linked_binding.cc',
-        'test/cctest/test_node_api.cc',
-        'test/cctest/test_per_process.cc',
-        'test/cctest/test_platform.cc',
-        'test/cctest/test_report.cc',
-        'test/cctest/test_json_utils.cc',
-        'test/cctest/test_sockaddr.cc',
-        'test/cctest/test_traced_value.cc',
-        'test/cctest/test_util.cc',
-      ],
-
-      'conditions': [
-        [ 'node_use_openssl=="true"', {
-          'defines': [
-            'HAVE_OPENSSL=1',
-          ],
-          'sources': [
-            'test/cctest/test_crypto_clienthello.cc',
-            'test/cctest/test_node_crypto.cc',
-          ]
-        }],
-        ['v8_enable_inspector==1', {
-          'sources': [
-            'test/cctest/test_inspector_socket.cc',
-            'test/cctest/test_inspector_socket_server.cc'
-          ],
-          'defines': [
-            'HAVE_INSPECTOR=1',
-          ],
-        }, {
-           'defines': [
-             'HAVE_INSPECTOR=0',
-           ]
-        }],
-        ['OS=="solaris"', {
-          'ldflags': [ '-I<(SHARED_INTERMEDIATE_DIR)' ]
-        }],
-        # Skip cctest while building shared lib node for Windows
-        [ 'OS=="win" and node_shared=="true"', {
-          'type': 'none',
-        }],
-        [ 'node_shared=="true"', {
-          'xcode_settings': {
-            'OTHER_LDFLAGS': [ '-Wl,-rpath,@loader_path', ],
-          },
-        }],
-        ['OS=="win"', {
-          'libraries': [
-            'Dbghelp.lib',
-            'winmm.lib',
-            'Ws2_32.lib',
-          ],
-        }],
-      ],
-    }, # cctest
-
-    {
-      'target_name': 'embedtest',
-      'type': 'executable',
-
-      'dependencies': [
-        '<(node_lib_target_name)',
-        'deps/histogram/histogram.gyp:histogram',
-        'deps/uvwasi/uvwasi.gyp:uvwasi',
-        'node_dtrace_header',
-        'node_dtrace_ustack',
-        'node_dtrace_provider',
-        'deps/ada/ada.gyp:ada',
-      ],
-
-      'includes': [
-        'node.gypi'
-      ],
-
-      'include_dirs': [
-        'src',
-        'tools/msvs/genfiles',
-        'deps/v8/include',
-        'deps/cares/include',
-        'deps/uv/include',
-        'deps/uvwasi/include',
-        'test/embedding',
-      ],
-
-      'sources': [
-        'src/node_snapshot_stub.cc',
-        'test/embedding/embedtest.cc',
-      ],
-
-      'conditions': [
-        ['OS=="solaris"', {
-          'ldflags': [ '-I<(SHARED_INTERMEDIATE_DIR)' ]
-        }],
-        # Skip cctest while building shared lib node for Windows
-        [ 'OS=="win" and node_shared=="true"', {
-          'type': 'none',
-        }],
-        [ 'node_shared=="true"', {
-          'xcode_settings': {
-            'OTHER_LDFLAGS': [ '-Wl,-rpath,@loader_path', ],
-          },
-        }],
-        ['OS=="win"', {
-          'libraries': [
-            'Dbghelp.lib',
-            'winmm.lib',
-            'Ws2_32.lib',
-          ],
-        }],
-      ],
-    }, # embedtest
-
-    {
-      'target_name': 'overlapped-checker',
-      'type': 'executable',
-
-      'conditions': [
-        ['OS=="win"', {
-          'sources': [
-            'test/overlapped-checker/main_win.c'
-          ],
-        }],
-        ['OS!="win"', {
-          'sources': [
-            'test/overlapped-checker/main_unix.c'
-          ],
-        }],
-      ]
-    }, # overlapped-checker
-    {
-      'target_name': 'node_mksnapshot',
-      'type': 'executable',
-
-      'dependencies': [
-        '<(node_lib_target_name)',
-        'deps/histogram/histogram.gyp:histogram',
-        'deps/uvwasi/uvwasi.gyp:uvwasi',
-        'deps/ada/ada.gyp:ada',
-      ],
-
-      'includes': [
-        'node.gypi'
-      ],
-
-      'include_dirs': [
-        'src',
-        'tools/msvs/genfiles',
-        'deps/v8/include',
-        'deps/cares/include',
-        'deps/uv/include',
-        'deps/uvwasi/include',
-      ],
-
-      'defines': [ 'NODE_WANT_INTERNALS=1' ],
-
-      'sources': [
-        'src/node_snapshot_stub.cc',
-        'tools/snapshot/node_mksnapshot.cc',
-      ],
-
-      'conditions': [
-        [ 'node_use_openssl=="true"', {
-          'defines': [
-            'HAVE_OPENSSL=1',
-          ],
-        }],
-        [ 'node_use_node_code_cache=="true"', {
-          'defines': [
-            'NODE_USE_NODE_CODE_CACHE=1',
-          ],
-        }],
-        ['v8_enable_inspector==1', {
-          'defines': [
-            'HAVE_INSPECTOR=1',
-          ],
-        }],
-        ['OS=="win"', {
-          'libraries': [
-            'Dbghelp.lib',
-            'winmm.lib',
-            'Ws2_32.lib',
-          ],
-        }],
-      ],
-    }, # node_mksnapshot
   ], # end targets
 
   'conditions': [
diff --git a/src/debug_utils.cc b/src/debug_utils.cc
index fadf321..8abc710 100644
--- a/src/debug_utils.cc
+++ b/src/debug_utils.cc
@@ -502,7 +502,7 @@ void FWrite(FILE* file, const std::string& str) {
 
   WriteConsoleW(handle, wbuf.data(), n, nullptr, nullptr);
   return;
-#elif defined(__ANDROID__)
+#elif defined(__ANDROID__) && !defined(__TERMUX__)
   if (file == stderr) {
     __android_log_print(ANDROID_LOG_ERROR, "nodejs", "%s", str.data());
     return;
diff --git a/src/node_internals.h b/src/node_internals.h
index 427cfab..75f290b 100644
--- a/src/node_internals.h
+++ b/src/node_internals.h
@@ -292,7 +292,7 @@ class ThreadPoolWork {
 
 // Functions defined in node.cc that are exposed via the bootstrapper object
 
-#if defined(__POSIX__) && !defined(__ANDROID__) && !defined(__CloudABI__)
+#if defined(__POSIX__) && !defined(__CloudABI__)
 #define NODE_IMPLEMENTS_POSIX_CREDENTIALS 1
 #endif  // defined(__POSIX__) && !defined(__ANDROID__) && !defined(__CloudABI__)
 
diff --git a/src/node_report.cc b/src/node_report.cc
index f643962..53c72f0 100644
--- a/src/node_report.cc
+++ b/src/node_report.cc
@@ -322,6 +322,9 @@ static void PrintCpuInfo(JSONWriter* writer) {
     }
     writer->json_arrayend();
     uv_free_cpu_info(cpu_info, count);
+  } else {
+    writer->json_arraystart("cpus");
+    writer->json_arrayend();
   }
 }
 
diff --git a/test/parallel/test-blob-buffer-too-large.js b/test/parallel/test-blob-buffer-too-large.js
index 2fd8b87..ef9457b 100644
--- a/test/parallel/test-blob-buffer-too-large.js
+++ b/test/parallel/test-blob-buffer-too-large.js
@@ -4,10 +4,14 @@
 const common = require('../common');
 const assert = require('assert');
 const { Blob } = require('buffer');
+const { platform } = require('os');
 
 if (common.isFreeBSD)
   common.skip('Oversized buffer make the FreeBSD CI runner crash');
 
+if (platform() === 'android')
+  common.skip('Android will kill heavy memory using processes sometimes crashing Termux');
+
 try {
   new Blob([new Uint8Array(0xffffffff), [1]]);
 } catch (e) {
diff --git a/test/parallel/test-child-process-uid-gid.js b/test/parallel/test-child-process-uid-gid.js
index 7482142..dee9b12 100644
--- a/test/parallel/test-child-process-uid-gid.js
+++ b/test/parallel/test-child-process-uid-gid.js
@@ -4,6 +4,10 @@ const assert = require('assert');
 const spawn = require('child_process').spawn;
 const expectedError = common.isWindows ? /\bENOTSUP\b/ : /\bEPERM\b/;
 
+if (process.platform === 'android') {
+  common.skip('We are patching node to not use setuid/setgid with child_process.spawn in anyway');
+}
+
 if (common.isIBMi)
   common.skip('IBMi has a different behavior');
 
diff --git a/test/parallel/test-dgram-bind-fd.js b/test/parallel/test-dgram-bind-fd.js
index daf7f80..c636351 100644
--- a/test/parallel/test-dgram-bind-fd.js
+++ b/test/parallel/test-dgram-bind-fd.js
@@ -7,6 +7,7 @@ if (common.isWindows)
 const assert = require('assert');
 const dgram = require('dgram');
 const { internalBinding } = require('internal/test/binding');
+const { platform } = require('os');
 const { UDP } = internalBinding('udp_wrap');
 const { UV_UDP_REUSEADDR } = require('os').constants;
 
@@ -77,7 +78,7 @@ const BUFFER_SIZE = 4096;
         const sendBufferSize = socket.getSendBufferSize();
 
         // note: linux will double the buffer size
-        const expectedBufferSize = common.isLinux ?
+        const expectedBufferSize = (common.isLinux || platform() === 'android') ?
           BUFFER_SIZE * 2 : BUFFER_SIZE;
         assert.strictEqual(recvBufferSize, expectedBufferSize);
         assert.strictEqual(sendBufferSize, expectedBufferSize);
diff --git a/test/parallel/test-dgram-membership.js b/test/parallel/test-dgram-membership.js
index ebfdaa9..ff4675c 100644
--- a/test/parallel/test-dgram-membership.js
+++ b/test/parallel/test-dgram-membership.js
@@ -3,6 +3,7 @@
 const common = require('../common');
 const assert = require('assert');
 const dgram = require('dgram');
+const { platform } = require('os');
 const multicastAddress = '224.0.0.114';
 
 const setup = dgram.createSocket.bind(dgram, { type: 'udp4', reuseAddr: true });
@@ -106,11 +107,12 @@ const setup = dgram.createSocket.bind(dgram, { type: 'udp4', reuseAddr: true });
 // addSourceSpecificMembership with invalid groupAddress should throw
 {
   const socket = setup();
+  const errCode = platform() === 'android' ? 'ENOSYS' : 'EINVAL';
   assert.throws(() => {
     socket.addSourceSpecificMembership(multicastAddress, '0');
   }, {
-    code: 'EINVAL',
-    message: 'addSourceSpecificMembership EINVAL'
+    code: errCode,
+    message: `addSourceSpecificMembership ${errCode}`
   });
   socket.close();
 }
@@ -144,11 +146,12 @@ const setup = dgram.createSocket.bind(dgram, { type: 'udp4', reuseAddr: true });
 // dropSourceSpecificMembership with invalid UDP should throw
 {
   const socket = setup();
+  const errCode = platform() === 'android' ? 'ENOSYS' : 'EINVAL';
   assert.throws(() => {
     socket.dropSourceSpecificMembership(multicastAddress, '0');
   }, {
-    code: 'EINVAL',
-    message: 'dropSourceSpecificMembership EINVAL'
+    code: errCode,
+    message: `dropSourceSpecificMembership ${errCode}`
   });
   socket.close();
 }
diff --git a/test/parallel/test-dgram-socket-buffer-size.js b/test/parallel/test-dgram-socket-buffer-size.js
index c03b8bf..fb972b0 100644
--- a/test/parallel/test-dgram-socket-buffer-size.js
+++ b/test/parallel/test-dgram-socket-buffer-size.js
@@ -6,6 +6,7 @@ const assert = require('assert');
 const dgram = require('dgram');
 const { inspect } = require('util');
 const { internalBinding } = require('internal/test/binding');
+const { platform } = require('os');
 const {
   UV_EBADF,
   UV_EINVAL,
@@ -115,7 +116,7 @@ function getExpectedError(type) {
     socket.setSendBufferSize(10000);
 
     // note: linux will double the buffer size
-    const expectedBufferSize = common.isLinux ? 20000 : 10000;
+    const expectedBufferSize = (common.isLinux || platform() === 'android') ? 20000 : 10000;
     assert.strictEqual(socket.getRecvBufferSize(), expectedBufferSize);
     assert.strictEqual(socket.getSendBufferSize(), expectedBufferSize);
     socket.close();
diff --git a/test/parallel/test-process-constants-noatime.js b/test/parallel/test-process-constants-noatime.js
index bd1a848..9790daf 100644
--- a/test/parallel/test-process-constants-noatime.js
+++ b/test/parallel/test-process-constants-noatime.js
@@ -4,7 +4,7 @@ const common = require('../common');
 const assert = require('assert');
 const constants = require('fs').constants;
 
-if (common.isLinux) {
+if (common.isLinux || process.platform === 'android') {
   assert('O_NOATIME' in constants);
   assert.strictEqual(constants.O_NOATIME, 0x40000);
 } else {
diff --git a/tools/gyp/pylib/gyp/generator/ninja.py b/tools/gyp/pylib/gyp/generator/ninja.py
index 3db3771..2e0a021 100644
--- a/tools/gyp/pylib/gyp/generator/ninja.py
+++ b/tools/gyp/pylib/gyp/generator/ninja.py
@@ -42,7 +42,7 @@ generator_default_variables = {
     # the start of a string, while $| is used for variables that can appear
     # anywhere in a string.
     "INTERMEDIATE_DIR": "$!INTERMEDIATE_DIR",
-    "SHARED_INTERMEDIATE_DIR": "$!PRODUCT_DIR/gen",
+    "SHARED_INTERMEDIATE_DIR": "$!PRODUCT_DIR/$|OBJ/gen",
     "PRODUCT_DIR": "$!PRODUCT_DIR",
     "CONFIGURATION_NAME": "$|CONFIGURATION_NAME",
     # Special variables that may be used by gyp 'rule' targets.
@@ -285,6 +285,12 @@ class NinjaWriter:
         CONFIGURATION_NAME = "$|CONFIGURATION_NAME"
         path = path.replace(CONFIGURATION_NAME, self.config_name)
 
+        obj = "obj"
+        if self.toolset != "target":
+            obj += "." + self.toolset
+
+        path = path.replace("$|OBJ", obj)
+
         return path
 
     def ExpandRuleVariables(self, path, root, dirname, source, ext, name):
diff --git a/tools/install.py b/tools/install.py
index f13f2ec..0778d6c 100755
--- a/tools/install.py
+++ b/tools/install.py
@@ -140,10 +140,9 @@ def subdir_files(path, dest, action):
   for subdir, files_in_path in ret.items():
     action(files_in_path, subdir + '/')
 
-def files(action):
+def files(action, output_prefix):
   is_windows = sys.platform == 'win32'
   output_file = 'node'
-  output_prefix = 'out/Release/'
 
   if is_windows:
     output_file += '.exe'
@@ -324,7 +323,9 @@ def run(args):
 
   if len(args) > 3:
     node_prefix = args[3]
-
+  output_prefix = 'out/Release/'
+  if len(args) > 4:
+    output_prefix = args[4]
   # install_path thus becomes the base target directory.
   install_path = dst_dir + node_prefix + '/'
 
@@ -339,10 +340,10 @@ def run(args):
       return
   else:
     if cmd == 'install':
-      files(install)
+      files(install, output_prefix)
       return
     if cmd == 'uninstall':
-      files(uninstall)
+      files(uninstall, output_prefix)
       return
 
   raise RuntimeError('Bad command: %s\n' % cmd)
diff --git a/tools/v8_gypfiles/toolchain.gypi b/tools/v8_gypfiles/toolchain.gypi
index 61c59e4..fece6c1 100644
--- a/tools/v8_gypfiles/toolchain.gypi
+++ b/tools/v8_gypfiles/toolchain.gypi
@@ -62,7 +62,7 @@
     'mips_use_msa%': 0,
 
     # Print to stdout on Android.
-    'v8_android_log_stdout%': 0,
+    'v8_android_log_stdout%': 1,
 
     'v8_enable_backtrace%': 0,
 
diff --git a/tools/v8_gypfiles/v8.gyp b/tools/v8_gypfiles/v8.gyp
index a721ffb..6035657 100644
--- a/tools/v8_gypfiles/v8.gyp
+++ b/tools/v8_gypfiles/v8.gyp
@@ -1114,6 +1114,7 @@
             '<(V8_ROOT)/src/base/platform/platform-posix.h',
             '<(V8_ROOT)/src/base/platform/platform-posix-time.cc',
             '<(V8_ROOT)/src/base/platform/platform-posix-time.h',
+	    '<(V8_ROOT)/src/base/platform/platform-linux.h',
           ],
           'link_settings': {
             'target_conditions': [
@@ -1612,7 +1613,12 @@
           }],
           ['clang or OS!="win"', {
             'conditions': [
-              ['_toolset == "host" and host_arch == "x64" or _toolset == "target" and target_arch=="x64"', {
+              ['_toolset == "host" and host_arch == "x64" and (target_arch == "arm" or target_arch == "ia32")', {
+                'sources': [
+                  '<(V8_ROOT)/src/heap/base/asm/ia32/push_registers_asm.cc',
+                ],
+              }],
+              ['_toolset == "host" and host_arch == "x64" and (target_arch == "x64" or target_arch == "arm64") or (_toolset == "target" and target_arch == "x64")', {
                 'sources': [
                   '<(V8_ROOT)/src/heap/base/asm/x64/push_registers_asm.cc',
                 ],
